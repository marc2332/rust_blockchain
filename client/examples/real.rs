use blockchain::{
    TransactionBuilder,
    Wallet,
};
use client::RPCClient;

#[tokio::main]
async fn main() {
    // Connect to the node's RPC server
    let client = RPCClient::new("http://localhost:3030").await.unwrap();

    // Sender wallet: This wallet should be created from the private key
    let wallet_a = Wallet::from_private(
        vec![
            45, 45, 45, 45, 45, 66, 69, 71, 73, 78, 32, 80, 82, 73, 86, 65, 84, 69, 32, 75, 69, 89,
            45, 45, 45, 45, 45, 10, 77, 73, 73, 67, 100, 103, 73, 66, 65, 68, 65, 78, 66, 103, 107,
            113, 104, 107, 105, 71, 57, 119, 48, 66, 65, 81, 69, 70, 65, 65, 83, 67, 65, 109, 65,
            119, 103, 103, 74, 99, 65, 103, 69, 65, 65, 111, 71, 66, 65, 79, 77, 78, 100, 114, 102,
            67, 114, 116, 103, 86, 78, 111, 112, 110, 10, 57, 98, 118, 79, 49, 122, 97, 81, 104,
            69, 98, 51, 71, 97, 107, 71, 47, 83, 88, 50, 47, 110, 98, 47, 55, 53, 83, 121, 53, 76,
            84, 72, 82, 100, 50, 105, 56, 47, 100, 88, 67, 86, 110, 103, 120, 79, 73, 112, 78, 66,
            85, 71, 119, 120, 99, 69, 102, 84, 75, 97, 51, 82, 48, 83, 10, 65, 71, 53, 117, 103,
            57, 115, 122, 88, 74, 65, 43, 48, 86, 55, 70, 104, 47, 65, 68, 56, 74, 55, 117, 82, 98,
            80, 55, 52, 115, 57, 43, 111, 48, 75, 66, 73, 110, 75, 118, 89, 103, 77, 73, 55, 69,
            47, 104, 49, 89, 80, 47, 77, 75, 68, 120, 82, 99, 97, 77, 56, 75, 116, 81, 10, 65, 52,
            115, 47, 74, 100, 116, 114, 68, 106, 109, 122, 90, 70, 57, 86, 103, 52, 75, 74, 88, 87,
            57, 97, 53, 112, 109, 49, 65, 103, 77, 66, 65, 65, 69, 67, 103, 89, 69, 65, 114, 50,
            121, 52, 109, 57, 80, 115, 71, 81, 71, 83, 121, 83, 55, 51, 87, 109, 113, 43, 78, 117,
            100, 68, 10, 102, 68, 122, 119, 99, 51, 114, 49, 51, 102, 53, 79, 114, 119, 121, 104,
            81, 56, 100, 81, 69, 121, 105, 102, 110, 49, 87, 71, 110, 48, 82, 56, 56, 104, 100, 75,
            112, 116, 53, 107, 52, 104, 88, 43, 90, 50, 116, 78, 101, 43, 114, 82, 67, 101, 80,
            100, 116, 51, 84, 108, 111, 43, 75, 66, 10, 109, 69, 86, 73, 119, 99, 101, 102, 97,
            100, 106, 83, 101, 52, 66, 79, 52, 101, 56, 66, 71, 86, 47, 77, 101, 82, 110, 101, 116,
            104, 102, 76, 75, 81, 69, 98, 108, 88, 53, 77, 111, 79, 54, 84, 87, 121, 78, 121, 51,
            71, 79, 69, 57, 101, 74, 87, 89, 51, 78, 53, 78, 121, 52, 80, 10, 66, 73, 112, 88, 111,
            110, 72, 82, 75, 89, 67, 97, 101, 117, 98, 100, 114, 113, 85, 67, 81, 81, 68, 47, 117,
            53, 102, 56, 104, 122, 98, 65, 82, 66, 100, 71, 57, 120, 111, 84, 79, 101, 80, 43, 89,
            105, 102, 48, 43, 102, 98, 105, 84, 86, 72, 101, 118, 109, 104, 102, 68, 106, 83, 83,
            10, 115, 52, 90, 68, 80, 87, 75, 109, 71, 114, 107, 105, 53, 119, 117, 71, 104, 51,
            114, 110, 120, 66, 106, 100, 67, 118, 118, 49, 122, 55, 71, 56, 80, 101, 78, 121, 79,
            104, 66, 50, 65, 84, 122, 47, 65, 107, 69, 65, 52, 48, 111, 121, 120, 110, 107, 106,
            116, 77, 65, 108, 88, 78, 69, 104, 10, 116, 83, 81, 85, 79, 43, 65, 116, 79, 84, 98,
            101, 81, 72, 101, 87, 67, 56, 43, 80, 97, 119, 108, 76, 108, 109, 78, 122, 122, 108,
            121, 108, 51, 104, 103, 122, 80, 113, 109, 70, 105, 110, 112, 99, 99, 82, 111, 49, 66,
            89, 75, 109, 76, 109, 101, 112, 108, 81, 98, 117, 51, 101, 49, 75, 10, 108, 43, 100,
            70, 83, 119, 74, 65, 65, 106, 82, 109, 48, 103, 109, 69, 89, 108, 72, 122, 57, 87, 117,
            112, 56, 79, 74, 57, 52, 98, 75, 77, 55, 54, 75, 56, 67, 121, 86, 112, 103, 69, 99, 90,
            57, 84, 47, 86, 71, 106, 75, 115, 66, 75, 90, 104, 49, 70, 98, 69, 111, 57, 86, 107,
            10, 70, 119, 118, 82, 57, 109, 43, 78, 87, 49, 74, 57, 54, 53, 101, 88, 121, 54, 121,
            111, 54, 108, 73, 118, 49, 67, 83, 99, 108, 119, 74, 65, 97, 69, 104, 104, 49, 89, 103,
            57, 74, 114, 66, 71, 78, 68, 106, 76, 119, 50, 87, 68, 86, 120, 108, 55, 66, 108, 89,
            122, 85, 78, 98, 78, 10, 90, 67, 118, 101, 80, 74, 106, 117, 77, 108, 106, 57, 67, 69,
            67, 102, 53, 97, 43, 113, 121, 50, 82, 83, 72, 103, 65, 89, 75, 57, 104, 47, 88, 85,
            68, 100, 97, 69, 115, 116, 108, 109, 43, 119, 53, 117, 102, 53, 111, 111, 112, 56, 48,
            119, 74, 65, 70, 122, 88, 86, 48, 103, 122, 57, 10, 106, 99, 56, 73, 102, 57, 119, 120,
            71, 51, 81, 109, 71, 86, 117, 121, 107, 78, 48, 49, 109, 118, 49, 79, 75, 56, 53, 120,
            82, 109, 52, 83, 103, 105, 100, 101, 101, 106, 82, 113, 89, 43, 109, 121, 54, 77, 75,
            120, 121, 65, 80, 103, 71, 73, 49, 47, 119, 57, 81, 102, 117, 81, 110, 48, 10, 108,
            105, 100, 47, 79, 70, 118, 74, 84, 98, 55, 47, 84, 65, 61, 61, 10, 45, 45, 45, 45, 45,
            69, 78, 68, 32, 80, 82, 73, 86, 65, 84, 69, 32, 75, 69, 89, 45, 45, 45, 45, 45, 10,
        ]
        .as_slice(),
    );
    // Receiver wallet
    let wallet_b = Wallet::new();

    // Build the transaction
    let sample_tx = TransactionBuilder::new()
        .key(&wallet_a.get_public())
        .from_address(&wallet_a.get_public().hash_it())
        .to_address(&wallet_b.get_public().hash_it())
        .ammount(1)
        .hash_movement()
        .sign_with(&wallet_a)
        .build_movement();

    // Send the transaction to a known node
    let res = client.add_transaction(sample_tx).await;

    println!("{:?}", res.unwrap());
}

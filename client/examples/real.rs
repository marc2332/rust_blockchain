use blockchain::{
    TransactionBuilder,
    Wallet,
};
use client::RPCClient;

#[tokio::main]
async fn main() {
    // Connect to the node's RPC server
    let client = RPCClient::new("http://localhost:3030").await.unwrap();

    let wallet_a = Wallet::from_private(
        vec![
            45, 45, 45, 45, 45, 66, 69, 71, 73, 78, 32, 80, 82, 73, 86, 65, 84, 69, 32, 75, 69, 89,
            45, 45, 45, 45, 45, 10, 77, 73, 73, 67, 101, 81, 73, 66, 65, 68, 65, 78, 66, 103, 107,
            113, 104, 107, 105, 71, 57, 119, 48, 66, 65, 81, 69, 70, 65, 65, 83, 67, 65, 109, 77,
            119, 103, 103, 74, 102, 65, 103, 69, 65, 65, 111, 71, 66, 65, 75, 53, 55, 68, 106, 120,
            53, 105, 81, 65, 54, 101, 57, 106, 53, 10, 107, 119, 74, 47, 83, 101, 53, 56, 71, 80,
            54, 87, 51, 90, 82, 51, 90, 86, 100, 106, 65, 71, 107, 110, 106, 65, 47, 67, 99, 120,
            98, 87, 89, 106, 120, 57, 83, 86, 80, 57, 78, 122, 113, 84, 78, 106, 55, 103, 119, 53,
            116, 103, 67, 115, 74, 67, 70, 57, 112, 112, 97, 109, 75, 110, 10, 83, 51, 54, 84, 51,
            114, 66, 112, 105, 82, 47, 50, 53, 99, 74, 117, 100, 77, 108, 105, 107, 71, 81, 87, 78,
            43, 107, 97, 66, 109, 115, 51, 113, 112, 111, 87, 101, 47, 78, 112, 103, 72, 75, 83,
            86, 121, 97, 48, 87, 77, 106, 112, 105, 107, 97, 73, 120, 118, 89, 88, 110, 53, 48,
            101, 10, 52, 52, 51, 69, 56, 67, 85, 55, 81, 67, 73, 107, 77, 101, 52, 65, 53, 106,
            101, 110, 70, 120, 84, 106, 111, 116, 52, 51, 65, 103, 77, 66, 65, 65, 69, 67, 103, 89,
            69, 65, 104, 66, 103, 70, 110, 121, 77, 106, 53, 86, 104, 104, 105, 116, 76, 110, 121,
            87, 119, 48, 118, 75, 105, 88, 10, 65, 54, 101, 84, 43, 87, 75, 114, 66, 111, 50, 100,
            77, 102, 56, 79, 117, 112, 43, 115, 73, 103, 52, 77, 77, 86, 57, 111, 116, 72, 49, 118,
            52, 112, 105, 119, 54, 77, 109, 104, 84, 88, 66, 89, 116, 78, 106, 48, 49, 104, 89, 89,
            120, 76, 101, 68, 73, 69, 69, 121, 120, 88, 119, 98, 10, 106, 109, 114, 106, 113, 54,
            72, 80, 101, 85, 88, 105, 90, 112, 50, 73, 107, 74, 71, 106, 86, 119, 48, 86, 50, 100,
            117, 56, 71, 100, 66, 111, 122, 81, 108, 90, 121, 116, 121, 120, 105, 88, 110, 103, 75,
            98, 84, 79, 57, 70, 85, 76, 77, 114, 120, 80, 113, 109, 80, 70, 57, 65, 68, 48, 10, 47,
            117, 99, 70, 83, 65, 77, 50, 109, 97, 89, 112, 73, 120, 116, 110, 78, 52, 69, 67, 81,
            81, 68, 85, 52, 120, 75, 49, 76, 75, 67, 110, 55, 88, 104, 112, 77, 100, 51, 100, 72,
            48, 109, 109, 112, 120, 114, 76, 48, 52, 77, 99, 76, 78, 70, 87, 49, 69, 120, 101, 85,
            101, 43, 87, 10, 68, 88, 74, 103, 54, 52, 86, 49, 122, 112, 83, 112, 50, 78, 79, 74,
            81, 99, 47, 70, 43, 50, 55, 99, 117, 47, 71, 54, 114, 53, 54, 43, 118, 105, 104, 50,
            55, 122, 104, 54, 111, 121, 111, 78, 65, 107, 69, 65, 48, 100, 68, 88, 122, 53, 57,
            115, 105, 111, 108, 56, 56, 112, 57, 68, 10, 120, 72, 79, 98, 98, 51, 106, 99, 98, 107,
            65, 81, 67, 80, 107, 86, 83, 52, 110, 110, 67, 99, 122, 80, 74, 106, 122, 120, 71, 84,
            82, 57, 71, 48, 78, 49, 73, 51, 114, 50, 100, 73, 80, 110, 49, 85, 79, 116, 75, 52,
            105, 54, 57, 86, 86, 56, 51, 102, 70, 115, 118, 81, 43, 102, 10, 57, 81, 111, 115, 85,
            119, 74, 66, 65, 75, 88, 120, 72, 113, 115, 69, 122, 51, 73, 50, 112, 67, 53, 122, 104,
            88, 113, 81, 111, 101, 116, 54, 120, 71, 78, 118, 83, 118, 114, 83, 89, 74, 100, 114,
            81, 117, 65, 101, 120, 68, 47, 86, 50, 88, 116, 56, 43, 118, 111, 97, 102, 106, 49,
            113, 10, 50, 51, 70, 90, 85, 71, 107, 71, 70, 97, 79, 81, 67, 78, 119, 53, 101, 117,
            99, 53, 43, 80, 98, 69, 102, 43, 84, 119, 102, 74, 48, 67, 81, 81, 67, 50, 105, 71, 68,
            110, 56, 77, 77, 108, 57, 120, 121, 114, 109, 117, 69, 67, 55, 75, 121, 67, 71, 118,
            120, 121, 77, 101, 117, 66, 10, 85, 117, 107, 121, 48, 87, 77, 100, 82, 72, 47, 71,
            118, 87, 102, 109, 122, 75, 73, 50, 99, 77, 90, 99, 117, 113, 72, 107, 108, 99, 105,
            47, 52, 87, 79, 114, 74, 119, 87, 51, 88, 56, 115, 69, 55, 118, 55, 120, 114, 56, 69,
            121, 70, 99, 113, 102, 65, 107, 69, 65, 120, 78, 72, 78, 10, 83, 109, 47, 113, 81, 49,
            114, 101, 122, 57, 68, 68, 74, 43, 56, 90, 54, 107, 86, 54, 117, 49, 122, 66, 69, 119,
            81, 87, 81, 78, 115, 71, 56, 82, 73, 106, 97, 47, 116, 80, 70, 86, 111, 57, 86, 109,
            86, 69, 100, 49, 65, 43, 86, 77, 117, 56, 56, 106, 111, 74, 98, 115, 78, 118, 10, 73,
            101, 90, 107, 76, 43, 82, 77, 117, 71, 72, 83, 105, 48, 113, 107, 70, 119, 61, 61, 10,
            45, 45, 45, 45, 45, 69, 78, 68, 32, 80, 82, 73, 86, 65, 84, 69, 32, 75, 69, 89, 45, 45,
            45, 45, 45, 10,
        ]
        .as_slice(),
    );
    let wallet_b = Wallet::new();

    let sample_tx = TransactionBuilder::new()
        .key(&wallet_a.get_public())
        .from_address(&wallet_a.get_public().hash_it())
        .to_address(&wallet_b.get_public().hash_it())
        .ammount(1)
        .hash_it()
        .sign_with(&wallet_a)
        .build();

    let res = client.add_transaction(sample_tx).await;

    println!("{:?}", res.unwrap());
}

use blockchain::{
    TransactionBuilder,
    Wallet,
};
use client::RPCClient;

#[tokio::main]
async fn main() {
    // Connect to the node's RPC server
    let client = RPCClient::new("http://localhost:3030").await.unwrap();

    // Sender wallet: This wallet should be created from the private key
    let wallet_a = Wallet::from_private(
        vec![
            45, 45, 45, 45, 45, 66, 69, 71, 73, 78, 32, 80, 82, 73, 86, 65, 84, 69, 32, 75, 69, 89,
            45, 45, 45, 45, 45, 10, 77, 73, 73, 67, 100, 81, 73, 66, 65, 68, 65, 78, 66, 103, 107,
            113, 104, 107, 105, 71, 57, 119, 48, 66, 65, 81, 69, 70, 65, 65, 83, 67, 65, 108, 56,
            119, 103, 103, 74, 98, 65, 103, 69, 65, 65, 111, 71, 66, 65, 78, 73, 106, 76, 70, 109,
            99, 109, 120, 85, 67, 52, 116, 84, 67, 10, 84, 103, 83, 114, 55, 87, 76, 65, 49, 56,
            67, 108, 106, 53, 65, 75, 74, 80, 104, 114, 57, 57, 114, 103, 102, 117, 48, 74, 52,
            117, 57, 104, 120, 51, 115, 97, 49, 76, 100, 48, 122, 85, 81, 114, 110, 108, 52, 76,
            53, 109, 81, 87, 98, 104, 73, 57, 113, 73, 69, 55, 107, 73, 84, 119, 10, 76, 102, 100,
            75, 83, 43, 43, 118, 105, 47, 103, 43, 82, 112, 47, 54, 120, 72, 108, 74, 110, 108, 66,
            51, 70, 115, 86, 119, 73, 122, 82, 52, 76, 82, 115, 100, 86, 84, 57, 116, 71, 121, 76,
            102, 71, 88, 106, 84, 112, 65, 53, 79, 120, 48, 57, 77, 108, 78, 113, 52, 81, 111, 80,
            49, 10, 66, 99, 102, 67, 121, 122, 107, 53, 122, 48, 55, 114, 119, 51, 100, 73, 75,
            103, 89, 121, 65, 70, 79, 90, 113, 83, 117, 70, 65, 103, 77, 66, 65, 65, 69, 67, 103,
            89, 65, 52, 68, 68, 109, 103, 68, 83, 48, 119, 66, 88, 48, 75, 48, 109, 105, 77, 120,
            109, 54, 105, 107, 70, 122, 55, 10, 102, 83, 48, 49, 100, 102, 56, 50, 89, 49, 88, 81,
            103, 50, 66, 88, 83, 80, 80, 71, 100, 89, 89, 72, 82, 55, 106, 69, 49, 100, 113, 74,
            47, 68, 104, 90, 84, 85, 77, 43, 72, 116, 49, 115, 56, 66, 85, 112, 111, 119, 71, 65,
            56, 54, 55, 79, 55, 110, 111, 105, 69, 66, 82, 72, 10, 55, 97, 120, 56, 107, 99, 113,
            84, 117, 87, 85, 51, 101, 79, 89, 57, 90, 85, 122, 103, 104, 107, 47, 110, 117, 52,
            112, 80, 65, 105, 65, 117, 109, 111, 120, 57, 70, 81, 120, 112, 109, 47, 90, 113, 55,
            98, 69, 85, 117, 90, 108, 107, 108, 65, 81, 85, 72, 57, 55, 107, 43, 90, 122, 113, 10,
            79, 115, 117, 85, 67, 48, 106, 117, 66, 83, 67, 116, 118, 87, 101, 54, 89, 81, 74, 66,
            65, 80, 71, 81, 99, 87, 43, 74, 55, 117, 77, 87, 69, 88, 98, 78, 103, 88, 102, 106, 76,
            66, 52, 81, 121, 115, 75, 118, 67, 87, 66, 77, 52, 86, 54, 51, 74, 54, 112, 119, 67,
            49, 49, 121, 10, 76, 104, 107, 47, 67, 53, 66, 86, 82, 103, 98, 117, 112, 53, 102, 76,
            83, 79, 89, 84, 115, 51, 118, 118, 109, 120, 118, 112, 50, 110, 107, 109, 108, 98, 116,
            77, 80, 86, 50, 117, 87, 122, 77, 67, 81, 81, 68, 101, 115, 102, 76, 78, 103, 68, 80,
            56, 43, 120, 68, 121, 113, 52, 110, 73, 10, 68, 84, 72, 81, 100, 80, 112, 53, 110, 98,
            116, 87, 49, 107, 48, 56, 114, 110, 120, 108, 87, 121, 115, 103, 68, 118, 115, 109,
            112, 118, 111, 50, 50, 57, 99, 86, 112, 87, 54, 56, 56, 77, 120, 100, 113, 121, 89, 47,
            77, 89, 114, 116, 76, 68, 113, 107, 112, 82, 113, 54, 114, 84, 47, 97, 10, 52, 53, 53,
            110, 65, 107, 65, 72, 99, 104, 66, 78, 65, 56, 57, 100, 75, 72, 122, 53, 85, 72, 82,
            66, 73, 98, 116, 109, 89, 100, 89, 101, 69, 103, 56, 84, 55, 77, 113, 49, 104, 75, 101,
            119, 86, 83, 118, 69, 103, 90, 82, 121, 75, 115, 78, 77, 101, 53, 82, 103, 43, 108, 73,
            111, 10, 70, 53, 102, 122, 110, 51, 47, 85, 118, 104, 110, 108, 122, 108, 116, 120,
            105, 73, 76, 115, 57, 118, 105, 100, 80, 112, 97, 74, 65, 107, 66, 106, 77, 80, 72, 77,
            78, 79, 108, 122, 75, 107, 85, 47, 81, 99, 98, 75, 69, 52, 53, 51, 111, 108, 77, 97,
            114, 110, 89, 79, 86, 76, 47, 115, 10, 89, 109, 47, 73, 71, 90, 97, 89, 51, 102, 78,
            105, 73, 81, 102, 99, 80, 89, 109, 77, 43, 55, 88, 97, 100, 73, 115, 105, 119, 97, 80,
            48, 105, 57, 87, 115, 108, 73, 71, 43, 97, 107, 103, 65, 108, 69, 67, 88, 57, 56, 68,
            76, 65, 107, 65, 118, 75, 67, 103, 85, 102, 72, 113, 81, 10, 79, 83, 49, 67, 111, 99,
            43, 71, 104, 47, 80, 90, 72, 51, 115, 83, 54, 51, 113, 114, 47, 89, 117, 118, 121, 82,
            89, 117, 102, 71, 112, 109, 81, 75, 100, 97, 122, 102, 75, 105, 117, 76, 82, 48, 56,
            80, 87, 119, 104, 104, 66, 110, 104, 55, 101, 89, 83, 82, 52, 54, 117, 78, 83, 111, 10,
            84, 116, 83, 106, 69, 101, 88, 76, 75, 72, 47, 116, 10, 45, 45, 45, 45, 45, 69, 78, 68,
            32, 80, 82, 73, 86, 65, 84, 69, 32, 75, 69, 89, 45, 45, 45, 45, 45, 10,
        ]
        .as_slice(),
    );
    // Receiver wallet
    let wallet_b = Wallet::new();

    // Build the transaction
    let sample_tx = TransactionBuilder::new()
        .key(&wallet_a.get_public())
        .from_address(&wallet_a.get_public().hash_it())
        .to_address(&wallet_b.get_public().hash_it())
        .ammount(1)
        .hash_it()
        .sign_with(&wallet_a)
        .build();

    // Send the transaction to a known node
    let res = client.add_transaction(sample_tx).await;

    println!("{:?}", res.unwrap());
}
